name: NStore CI

on: [push]

jobs:
  build:
    env:
      PACK: false
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 2
        
      matrix:
        dotnet: [ '2.2.401'] #, '2.2.301', '3.0.100-rc1-014190' ]
        os: ['ubuntu-latest', 'windows-2016'] #['windows-latest', 'ubuntu-latest', 'macOS-latest']

        include:

        - os: ubuntu-latest
          mssql: -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=sqlPw3$secure' -e 'MSSQL_PID=Developer' -p 1433:1433 --name msssql -d 'mcr.microsoft.com/mssql/server:2017-latest-ubuntu'
          mongoContainer: -d -p 27017:27017 --name mongo mongo
          
        - os: ubuntu-latest
          dotnet: '3.0.100-rc1-014190'
          PACK: true
          
        - os: windows-2016
          mssql: -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=sqlPw3$secure" -e "MSSQL_PID=Developer" -p 1433:1433 --name msssql -d "microsoft/mssql-server-windows-developer"
          mongoContainer: -p 27017:27017 --name mongodb -d "mongo:4.0-windowsservercore-ltsc2016"
          
        exclude:
        - os: windows-2016
          dotnet: '3.0.100-rc1-014190' 
                     
    name: Build for .NET ${{ matrix.dotnet }} on ${{matrix.os }}
    steps:
      # We want the build to continue not to block at the very first error
      # continue-on-error: true 
      
    - uses: actions/checkout@v1
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}
      
    - name: Build with dotnet
      run: dotnet build src/NStore.sln --configuration Release
    
    - name: Start Docker for MSSSql
      run: docker run ${{ matrix.mssql }}
      
    - name: Start Docker for Mongodb
      run: docker run ${{ matrix.mongoContainer }}
      
    - name: Dump mssql docker logs
      run: docker logs msssql
      
    - name: Run Tests - Core
      run: dotnet test src/NStore.Core.Tests/NStore.Core.Tests.csproj --configuration Release --no-build

    - name: Run Tests - Domain
      run: dotnet test src/NStore.Domain.Tests/NStore.Domain.Tests.csproj --configuration Release --no-build
    
    - name: Run Tests - MongoDb
      env:
        NSTORE_MONGODB: mongodb://localhost/nstore
      run: dotnet test src/NStore.Persistence.Mongo.Tests/NStore.Persistence.Mongo.Tests.csproj --configuration Release --no-build
      
   #- name: Try to connect to mssql from inside the image
   #   run: docker exec -it msssql /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P sqlPw3$secure
      
    - name: Run Tests - MsSql
      env:
        NSTORE_MSSQL: Server=localhost;user id=sa;password=sqlPw3$secure
      run: dotnet test src/NStore.Persistence.MsSql.Tests/NStore.Persistence.MsSql.Tests.csproj --configuration Release --no-build
    
    - name: Dump mssql docker logs after tests
      run: docker logs msssql
      
    - name: Run Tests - Sql Lite
      continue-on-error: true
      run: dotnet test src/NStore.Persistence.Sqlite.Tests/NStore.Persistence.Sqlite.Tests.csproj --configuration Release --no-build 
      
    - name: Pack Core 
      # if: '${PACK} == true'
      run: dotnet pack src/NStore.Core/NStore.Core.csproj
